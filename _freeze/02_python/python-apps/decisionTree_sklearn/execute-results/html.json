{
  "hash": "a3b09b375fd37e3a02b270c0a05bc4fc",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Decision Trees with Scikit-learn\"\njupyter: python3\norder: 3\n---\n\n::: {#93e9b9ec .cell quarto-private-1='{\"key\":\"executionInfo\",\"value\":{\"elapsed\":9,\"status\":\"ok\",\"timestamp\":1754859339425,\"user\":{\"displayName\":\"Xuebin Yang\",\"userId\":\"18047631927912204745\"},\"user_tz\":240}}' execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\n```\n:::\n\n\n::: {#d36c164a .cell quarto-private-1='{\"key\":\"executionInfo\",\"value\":{\"elapsed\":16,\"status\":\"ok\",\"timestamp\":1754859829708,\"user\":{\"displayName\":\"Xuebin Yang\",\"userId\":\"18047631927912204745\"},\"user_tz\":240}}' execution_count=2}\n``` {.python .cell-code}\ndf = pd.read_csv('diabetes.csv')\n```\n:::\n\n\n::: {#dd01b29f .cell quarto-private-1='{\"key\":\"executionInfo\",\"value\":{\"elapsed\":24,\"status\":\"ok\",\"timestamp\":1754859827862,\"user\":{\"displayName\":\"Xuebin Yang\",\"userId\":\"18047631927912204745\"},\"user_tz\":240}}' execution_count=3}\n``` {.python .cell-code}\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Pregnancies</th>\n      <th>Glucose</th>\n      <th>BloodPressure</th>\n      <th>SkinThickness</th>\n      <th>Insulin</th>\n      <th>BMI</th>\n      <th>DiabetesPedigreeFunction</th>\n      <th>Age</th>\n      <th>Outcome</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6</td>\n      <td>148</td>\n      <td>72</td>\n      <td>35</td>\n      <td>0</td>\n      <td>33.6</td>\n      <td>0.627</td>\n      <td>50</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>85</td>\n      <td>66</td>\n      <td>29</td>\n      <td>0</td>\n      <td>26.6</td>\n      <td>0.351</td>\n      <td>31</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>8</td>\n      <td>183</td>\n      <td>64</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23.3</td>\n      <td>0.672</td>\n      <td>32</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>89</td>\n      <td>66</td>\n      <td>23</td>\n      <td>94</td>\n      <td>28.1</td>\n      <td>0.167</td>\n      <td>21</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>137</td>\n      <td>40</td>\n      <td>35</td>\n      <td>168</td>\n      <td>43.1</td>\n      <td>2.288</td>\n      <td>33</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#d95da747 .cell quarto-private-1='{\"key\":\"executionInfo\",\"value\":{\"elapsed\":22,\"status\":\"ok\",\"timestamp\":1754860901843,\"user\":{\"displayName\":\"Xuebin Yang\",\"userId\":\"18047631927912204745\"},\"user_tz\":240}}' execution_count=4}\n``` {.python .cell-code}\nfrom sklearn import tree\nfrom sklearn.tree import DecisionTreeClassifier # Import Decision Tree Classifier\nfrom sklearn.model_selection import train_test_split # Import train_test_split function\nfrom sklearn import metrics #Import scikit-learn metrics module for accuracy calculation\n\nfeatures = ['Glucose', 'BloodPressure', 'Insulin', 'BMI', 'DiabetesPedigreeFunction', 'Age']\n\nx = df[features]\ny = df['Outcome']\n\n# Split dataset into training set and test set\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=1) # 70% training and 30% test\n\n# Create Decision Tree classifer object\nclf = DecisionTreeClassifier(max_depth=3)\n\n# Train Decision Tree Classifer\nclf = clf.fit(x_train,y_train)\n\n#Predict the response for test dataset\ny_pred = clf.predict(x_test)\n\n# Model Accuracy, how often is the classifier correct?\nAccuracy = metrics.accuracy_score(y_test, y_pred)\nprint(\"Accuracy:\", Accuracy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAccuracy: 0.7575757575757576\n```\n:::\n:::\n\n\n::: {#44054965 .cell quarto-private-1='{\"key\":\"executionInfo\",\"value\":{\"elapsed\":11,\"status\":\"ok\",\"timestamp\":1754861249316,\"user\":{\"displayName\":\"Xuebin Yang\",\"userId\":\"18047631927912204745\"},\"user_tz\":240}}' execution_count=5}\n``` {.python .cell-code}\nprint(y_pred)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 1 0 1 0\n 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 1 1 1 1 0 0\n 1 0 1 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 0 0 1 1 0 0 0\n 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 1 1 0 0 0\n 0 0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 1 1 1 1 0 0 1 0 0 0 0 0 0 1 0 1 0\n 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 1 0 0\n 0 1 0 0 0 0 0 1 0]\n```\n:::\n:::\n\n\n::: {#7b6950a0 .cell quarto-private-1='{\"key\":\"executionInfo\",\"value\":{\"elapsed\":564,\"status\":\"ok\",\"timestamp\":1754861078823,\"user\":{\"displayName\":\"Xuebin Yang\",\"userId\":\"18047631927912204745\"},\"user_tz\":240}}' execution_count=6}\n``` {.python .cell-code}\ntree.plot_tree(clf, feature_names=features)\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\n[Text(0.5, 0.875, 'Glucose <= 129.5\\ngini = 0.449\\nsamples = 537\\nvalue = [354, 183]'),\n Text(0.25, 0.625, 'BMI <= 26.3\\ngini = 0.329\\nsamples = 357\\nvalue = [283, 74]'),\n Text(0.375, 0.75, 'True  '),\n Text(0.125, 0.375, 'BMI <= 9.1\\ngini = 0.06\\nsamples = 97\\nvalue = [94, 3]'),\n Text(0.0625, 0.125, 'gini = 0.444\\nsamples = 6\\nvalue = [4, 2]'),\n Text(0.1875, 0.125, 'gini = 0.022\\nsamples = 91\\nvalue = [90, 1]'),\n Text(0.375, 0.375, 'Age <= 27.5\\ngini = 0.397\\nsamples = 260\\nvalue = [189, 71]'),\n Text(0.3125, 0.125, 'gini = 0.243\\nsamples = 120\\nvalue = [103, 17]'),\n Text(0.4375, 0.125, 'gini = 0.474\\nsamples = 140\\nvalue = [86, 54]'),\n Text(0.75, 0.625, 'BMI <= 27.85\\ngini = 0.478\\nsamples = 180\\nvalue = [71.0, 109.0]'),\n Text(0.625, 0.75, '  False'),\n Text(0.625, 0.375, 'Glucose <= 145.5\\ngini = 0.375\\nsamples = 36\\nvalue = [27, 9]'),\n Text(0.5625, 0.125, 'gini = 0.1\\nsamples = 19\\nvalue = [18, 1]'),\n Text(0.6875, 0.125, 'gini = 0.498\\nsamples = 17\\nvalue = [9, 8]'),\n Text(0.875, 0.375, 'Glucose <= 158.5\\ngini = 0.424\\nsamples = 144\\nvalue = [44, 100]'),\n Text(0.8125, 0.125, 'gini = 0.487\\nsamples = 88\\nvalue = [37, 51]'),\n Text(0.9375, 0.125, 'gini = 0.219\\nsamples = 56\\nvalue = [7, 49]')]\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](decisionTree_sklearn_files/figure-html/cell-7-output-2.png){width=540 height=389}\n:::\n:::\n\n\n",
    "supporting": [
      "decisionTree_sklearn_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}