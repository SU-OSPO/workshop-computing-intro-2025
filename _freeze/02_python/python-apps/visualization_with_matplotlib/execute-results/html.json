{
  "hash": "7b6dd0c472ea81e33ef580cd55fe6ca2",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Data Visualization with Matplotlib\"\njupyter: python3\norder: 2\n---\n\n::: {#2932700a .cell quarto-private-1='{\"key\":\"executionInfo\",\"value\":{\"elapsed\":416,\"status\":\"ok\",\"timestamp\":1754824698746,\"user\":{\"displayName\":\"Xuebin Yang\",\"userId\":\"18047631927912204745\"},\"user_tz\":240}}' execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\n```\n:::\n\n\n::: {#f6246cf3 .cell quarto-private-1='{\"key\":\"executionInfo\",\"value\":{\"elapsed\":46,\"status\":\"ok\",\"timestamp\":1754824701617,\"user\":{\"displayName\":\"Xuebin Yang\",\"userId\":\"18047631927912204745\"},\"user_tz\":240}}' execution_count=2}\n``` {.python .cell-code}\ndf = pd.read_csv('diabetes.csv')\n```\n:::\n\n\n::: {#6ab2685e .cell quarto-private-1='{\"key\":\"executionInfo\",\"value\":{\"elapsed\":8,\"status\":\"ok\",\"timestamp\":1754824704280,\"user\":{\"displayName\":\"Xuebin Yang\",\"userId\":\"18047631927912204745\"},\"user_tz\":240}}' execution_count=3}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n```\n:::\n\n\n1. Line Chart\n\n::: {#c56491f5 .cell quarto-private-1='{\"key\":\"executionInfo\",\"value\":{\"elapsed\":413,\"status\":\"ok\",\"timestamp\":1754825960495,\"user\":{\"displayName\":\"Xuebin Yang\",\"userId\":\"18047631927912204745\"},\"user_tz\":240}}' execution_count=4}\n``` {.python .cell-code}\n#Parameter: x, y Coordinates for data points\nage = [3, 6, 9, 12, 15, 18, 21, 24]\nMike = [95, 120, 141, 159, 174, 185, 187, 187]\nGeorge = [99, 126, 145, 163, 179, 191, 191, 191]\n\nplt.plot(age, Mike, color='blue', linewidth=3, marker='o', markersize=8, linestyle='--')\n\nplt.plot(age, George, color='red', linewidth=3, marker='o', markersize=8, linestyle='--')\n\nplt.title(\"Line Chart\")\nplt.ylabel('Height (cm)')\nplt.xlabel('Age (years)')\nplt.legend(labels=('Mike', 'George'))\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](visualization_with_matplotlib_files/figure-html/cell-5-output-1.png){width=600 height=449}\n:::\n:::\n\n\n2. Bar Chart\n\n::: {#4619f4ff .cell quarto-private-1='{\"key\":\"executionInfo\",\"value\":{\"elapsed\":251,\"status\":\"ok\",\"timestamp\":1754825052145,\"user\":{\"displayName\":\"Xuebin Yang\",\"userId\":\"18047631927912204745\"},\"user_tz\":240}}' execution_count=5}\n``` {.python .cell-code}\n# This code creates a simple bar chart to show total bills for different days.\n# X-axis represents the days and Y-axis shows total bill amount.\nx = ['Thur', 'Fri', 'Sat', 'Sun']\ny = [170, 120, 250, 190]\n\nplt.bar(x, y, color='green', edgecolor='black', linewidth=2)\nplt.title(\"Bar Chart\")\nplt.xlabel(\"Day\")\nplt.ylabel(\"Total Bill\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](visualization_with_matplotlib_files/figure-html/cell-6-output-1.png){width=593 height=449}\n:::\n:::\n\n\n3. Histogram\n\n::: {#41ccd2ac .cell quarto-private-1='{\"key\":\"executionInfo\",\"value\":{\"elapsed\":464,\"status\":\"ok\",\"timestamp\":1754825058492,\"user\":{\"displayName\":\"Xuebin Yang\",\"userId\":\"18047631927912204745\"},\"user_tz\":240}}' execution_count=6}\n``` {.python .cell-code}\npregnancies = df['Pregnancies']\n\nplt.hist(pregnancies, bins=10, color='steelblue', edgecolor='black',linestyle='--')\nplt.title(\"Histogram\")\nplt.xlabel(\"Number of Pregnancy\")\nplt.ylabel(\"Frequency\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](visualization_with_matplotlib_files/figure-html/cell-7-output-1.png){width=598 height=449}\n:::\n:::\n\n\n4. Scatter Plot\n\n::: {#a3a1d12f .cell quarto-private-1='{\"key\":\"executionInfo\",\"value\":{\"elapsed\":236,\"status\":\"ok\",\"timestamp\":1754827028375,\"user\":{\"displayName\":\"Xuebin Yang\",\"userId\":\"18047631927912204745\"},\"user_tz\":240}}' execution_count=7}\n``` {.python .cell-code}\nBMI = df['BMI']\nBloodPressure = df['BloodPressure']\n\nplt.scatter(BMI, BloodPressure, s = 15)\nplt.title(\"Scatter Plot\")\nplt.xlabel(\"BMI\")\nplt.ylabel(\"Blood Pressure\")\n\nb, a = np.polyfit(BMI, BloodPressure, 1)\n\nplt.plot(BMI, b*BMI + a, color='red', linewidth=2)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](visualization_with_matplotlib_files/figure-html/cell-8-output-1.png){width=598 height=449}\n:::\n:::\n\n\n5. Pie Chart\n\n::: {#0b50f557 .cell quarto-private-1='{\"key\":\"executionInfo\",\"value\":{\"elapsed\":329,\"status\":\"ok\",\"timestamp\":1754825100952,\"user\":{\"displayName\":\"Xuebin Yang\",\"userId\":\"18047631927912204745\"},\"user_tz\":240}}' execution_count=8}\n``` {.python .cell-code}\n# This code creates a simple pie chart to visualize distribution of different car brands.\n# Each slice of pie represents the proportion of cars for each brand in the dataset.\ncars = ['AUDI', 'BMW', 'FORD','TESLA', 'JAGUAR',]\ndata = [23, 10, 35, 15, 12]\nexplode = [0.1, 0.5, 0, 0, 0]\ncolors = ( \"orange\", \"cyan\", \"yellow\",\"grey\", \"green\")\n\nplt.pie(data, labels=cars, explode=explode, colors=colors, autopct='%d%%', shadow = True)\n#plt.title(\"Pie Chart\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](visualization_with_matplotlib_files/figure-html/cell-9-output-1.png){width=417 height=438}\n:::\n:::\n\n\n6. Box Plot\n\n::: {#3c1fae69 .cell quarto-private-1='{\"key\":\"executionInfo\",\"value\":{\"elapsed\":179,\"status\":\"ok\",\"timestamp\":1754825275808,\"user\":{\"displayName\":\"Xuebin Yang\",\"userId\":\"18047631927912204745\"},\"user_tz\":240}}' execution_count=9}\n``` {.python .cell-code}\nPregnancies = df['Pregnancies']\nGlucose = df['Glucose']\nBloodPressure = df['BloodPressure']\nSkinThickness = df['SkinThickness']\nAge = df['Age']\n\ndata = Pregnancies\n\nplt.boxplot(data)\nplt.xlabel(\"Groups\")\nplt.ylabel(\"Values\")\nplt.title(\"Box Plot\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](visualization_with_matplotlib_files/figure-html/cell-10-output-1.png){width=597 height=449}\n:::\n:::\n\n\n",
    "supporting": [
      "visualization_with_matplotlib_files"
    ],
    "filters": [],
    "includes": {}
  }
}